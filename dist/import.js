if("undefined"!=typeof window){class t extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"}),e=document.createElement("slot");t.appendChild(e)}static breakpoint=new ResizeObserver((t=>{const e=["2xs","xs","sm","md","lg","xl","2xl","3xl"];for(const o of t){const t=o.target;e.forEach((e=>t.removeAttribute(`is-${e}-breakpoint`)));for(const r of e){const e=getComputedStyle(t).getPropertyValue(`--${r}-breakpoint`);o.borderBoxSize[0].inlineSize>=parseFloat(e)&&t.setAttribute(`is-${r}-breakpoint`,"")}}}));static color(t){const e=matchMedia("(prefers-color-scheme: dark)"),o=()=>{const o=e.matches;["light-color","dark-color"].forEach((e=>t.removeAttribute(`is-${e}`))),t.setAttribute(o?"is-dark-color":"is-light-color","")};e.addEventListener("change",o),o()}connectedCallback(){this.constructor.breakpoint.observe(this),this.constructor.color(this)}}customElements.define("semantic-props",t)}
