/* Styles for the entire application. */

@import "bootstrap-icons/font/bootstrap-icons.css";
@import "sanitize.css";
@import "semantic-props";

:root {
	scroll-behavior: smooth;
}

.semantic {
	--primary-color: oklch(0.9 0.025 260);
	@supports (color: light-dark(white, black)) {
		color-scheme: light dark;
		--primary-color: light-dark(oklch(0.9 0.025 260), oklch(0.5 0.05 260));
	}
}

::selection {
	background-color: var(--accent-200-500);
	background-color: oklch(from var(--accent-200-500) l c h / var(--x-low-opacity));
	color: var(--secondary-800-100);
}

.App.container {
	position: relative;
	display: block;
	font-family: var(--body-font);
	font-size: var(--medium-font);
	font-weight: var(--regular-font);
	line-height: var(--line-normal);
	letter-spacing: var(--letter-normal);
	word-spacing: var(--word-normal);
	color: var(--secondary-800-100);
	transition-property: background-color, color;
	transition-duration: var(--normal-time);
	transition-timing-function: var(--ease-out);
	overflow: clip;
	&::before, &::after {
		content: "";
		position: fixed;
		z-index: var(--z-bottom);
		inset: 0;
	}
	&::before {
		background-color: var(--primary-50-800);
		background-image:
			linear-gradient(145deg, oklch(1 0 0 / var(--x-low-opacity)) -100%, transparent),
			linear-gradient(145deg, var(--primary-50-800), var(--primary-100-900));
		background-size: 100% 100%;
	}
	&::after {
		position: absolute;
		background-image: linear-gradient(
			rgb(255, 0, 0) 0%,
			rgb(255, 154, 0) 10%,
			rgb(208, 222, 33) 20%,
			rgb(79, 220, 74) 30%,
			rgb(63, 218, 216) 40%,
			rgb(47, 201, 226) 50%,
			rgb(28, 127, 238) 60%,
			rgb(95, 21, 242) 70%,
			rgb(186, 12, 248) 80%,
			rgb(251, 7, 217) 90%,
			rgb(255, 0, 0) 100%
		);
		background-size: 100vb 50vb;
		background-position: top left;
		transform: rotate(35deg) translateY(-25vb);
		transform-origin: top left;
		opacity: var(--3x-low-opacity);
		filter: var(--3x-heavy-blur) var(--3x-heavy-blur);
	}
}

.App.wrapper {
	display: flex;
	flex-flow: column nowrap;
	justify-content: start;
	align-items: stretch;
	gap: 0 var(--large-size);
	min-height: min(100vh, 100dvh);
	max-width: var(--x-large-container);
	padding-inline-start: max(var(--responsive-size), var(--safe-left) + var(--medium-size));
	padding-inline-end: max(var(--responsive-size), var(--safe-right) + var(--medium-size));
	padding-block-start: calc(var(--safe-top) + var(--medium-size));
	padding-block-end: calc(var(--safe-bottom) + var(--medium-size));
	margin-inline: auto;
}

.App.content {
	display: flex;
	flex-flow: row wrap;
	justify-content: center;
	align-content: start;
	align-items: start;
	gap: inherit;
}

.App:is(.main, .aside) {
	display: block;
	width: min(100%, var(--x-small-container));
	container: App / inline-size;
	flex: 1 1 auto;
}

.App.aside {
	position: sticky;
	top: calc(var(--safe-top) + var(--x-small-size));
	flex-grow: 9999;
}

.App.footer {
	display: block;
	width: 100%;
	text-align: end;
	font-size: var(--small-font);
	color: var(--secondary-500-400);
	padding-block-start: var(--medium-size);
	margin-block-start: auto;
}