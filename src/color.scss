/* Semantic Props for color. Follows the 60-30-10 color theory rule. */

@use "sass:color" as color;

:where(.--semantic, .--color) {
	$colors: (
		--gray: oklch(0.6 0.01 260),
		--red: oklch(0.5 0.2 30),
		--coral: oklch(0.7 0.2 40),
		--brown: oklch(0.6 0.05 50),
		--orange: oklch(0.6 0.15 50),
		--yellow: oklch(0.8 0.15 90),
		--lime: oklch(0.7 0.15 120),
		--green: oklch(0.6 0.2 150),
		--cyan: oklch(0.7 0.15 180),
		--blue: oklch(0.6 0.15 240),
		--indigo: oklch(0.4 0.2 270),
		--violet: oklch(0.4 0.15 290),
		--purple: oklch(0.4 0.15 300),
		--magenta: oklch(0.6 0.2 330)
	);

	$light-dark: (
		--primary: --gray,
		--secondary: --gray,
		--accent: --blue
	);

	$weights: 50 100 200 300 400 500 600 700 800 900 950;

	@each $prop, $color in $colors {
		@each $weight in $weights {
			#{$prop}-#{$weight}: color.change($color, $lightness: calc(1 - ($weight / 1000)));
		}
	}

	@each $prop, $alias in $light-dark {
		@each $l in $weights {
			#{$prop}-#{$l}: var(#{$alias}-#{$l});
			@each $d in $weights {
				@if $d != $l {
					#{$prop}-#{$l}-#{$d}: var(#{$prop}-#{$l});
					#{$prop}-#{$l}-#{$d}: light-dark(var(#{$prop}-#{$l}), var(#{$prop}-#{$d}));
				}
			}
		}
	}
}